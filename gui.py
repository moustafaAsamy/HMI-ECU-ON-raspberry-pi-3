#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import serial
import os
import time ,threading
from PyQt5 import QtCore, QtGui, QtWidgets 
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import *
mode =0
status =1
SHUTDOWN_Message  = 0xab
MANUAL_Message    = 0xac
AUTO_Message      = 0xad
ser =serial.Serial('/dev/ttyACM0',9600)



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1250,600 )
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.horizontalScrollBar.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalScrollBar.sizePolicy().hasHeightForWidth())
        self.horizontalScrollBar.setSizePolicy(sizePolicy)
        self.horizontalScrollBar.setMaximum(1)
        self.horizontalScrollBar.setPageStep(1)
        self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        self.horizontalScrollBar.valueChanged['int'].connect(self.changeValue)
        self.gridLayout.addWidget(self.horizontalScrollBar, 1, 0, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget) ####
        self.pushButton_3.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(36)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(0, 0, 0, 28));")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 2, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)####
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet(" \n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(255, 0, 0, 255));")
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 0, 0, 1, 1)
        self.pushButton_2.clicked.connect(msgButtonClick)####
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setObjectName("textBrowser")
        #self.textBrowser.append('tttt')
        self.gridLayout.addWidget(self.textBrowser, 5, 0, 4, 6)
        #self.gridLayout.addWidget(self.textBrowser, 5, 0, 1, 2)
        #elf.layout =QGridLayout()
        #self.setLayout(self.layout)
        self.listwidget=QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listwidget.sizePolicy().hasHeightForWidth())
        self.listwidget.setSizePolicy(sizePolicy)
        #self.listwidget=QListWidget()
        self.listwidget.insertItem(0,"location 1")
        self.listwidget.insertItem(1,"location 2")
        self.listwidget.insertItem(2,"location 3")
        self.listwidget.insertItem(3,"location 4")
        self.gridLayout.addWidget(self.listwidget, 0, 2, 3, 4)
        #self.listwidget.show()
        #selflayout.addWidget(self.listwidget)
        '''self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setStyleSheet("border-image: url(th (3).jfif);")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 0, 1, 3, 1)
        '''
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1106, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    global show_fault
    def show_fault(x):
         print("99889")
         button = QMessageBox.critical(MainWindow,"Error",'mode ')
        
    def changeValue(self, value):
        global mode
        mode = value
        if (mode == 0) :
            _mes = "MA"
            ser.write(_mes.encode()) 
            self.textBrowser.append('Manual Mode is seleted ')
        elif (mode == 1):
            _mes = 'AT'
            ser.write(_mes.encode()) 
            self.textBrowser.append('Auto mode is seleted ')

    #global show_fault
    #def show_fault(self):
     #   self.textBrowser.append('fault')

    global show_SHUT
    def show_SHUT(self):
        self.textBrowser.append('SHUTDOWN')
        shutdown()
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_3.setText(_translate("MainWindow", "MA               |                AT"))
        self.pushButton_2.setText(_translate("MainWindow", "Shutdown"))
        #self.listwidget.setText(_translate("MainWindow", " "))



def msgButtonClick():      
        shutdown_mes = "SH"
        ser.write(shutdown_mes.encode())
        show_SHUT(ui)
        #show_fault(ui)
        button = QMessageBox.critical(MainWindow,"Error",'mode ')
        
def foo_1():
    print(time.ctime())
    threading.Timer(0.1,foo_1).start()

def foo_2():
    print(time.ctime())
    msg = 't'
    ser.write(msg.encode())
    threading.Timer(0.1,foo_2).start()
    
global fun
def fun():
    ui.textBrowser.append('ff') 

def foo_3():
    print(time.ctime())
    #show_SHUT(ui)
    #x=ser.readline()
    #global status
    #status = x
    #d= x[0]
    #show_fault()
    #print("d = ",d, "type= ",type(d))
    #if(d == 102):  #102 == 'f' 
     #    print("gggg")
      #   show_fault(0)
    threading.Timer(1,foo_3).start()

   
def shutdown():
    os.system("sudo shutdown -h now")
    

#if __name__ == "__main__":
import sys
app = QtWidgets.QApplication(sys.argv)
MainWindow = QtWidgets.QMainWindow()
global ui 
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
#show_SHUT(ui)
#MainWindow.showFullScreen()
MainWindow.show()
#app.showFullScreen()
foo_3()

sys.exit(app.exec_())




    
